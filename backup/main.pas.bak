unit main;

{$mode objfpc}{$H+}

interface

uses sdl2,sysutils,classes,retro;

var
  test:integer ;
  i,j,k,l,fh2,fh,lines:integer;

  event:tsdl_event;
  licznik:integer=0;

  q1,q2,q3:extended;
  thread:TRetro;

  sprx,sprxd,spryd,spry:integer;
  spr2x,spr2xd,spr2yd,spr2y:integer;
  spr3x,spr3xd,spr3yd,spr3y:integer;
  spr4x,spr4xd,spr4yd,spr4y:integer;
  spr5x,spr5xd,spr5yd,spr5y:integer;
  spr6x,spr6xd,spr6yd,spr6y:integer;
  spr7x,spr7xd,spr7yd,spr7y:integer;
  spr8x,spr8xd,spr8yd,spr8y:integer;

   c:int64=0;
   avsct:int64=0;
   avspt:int64=0;
   avall:int64=0;
   ttt:int64;
    qq:integer;

procedure main;

implementation

procedure main ;

begin
q1:=q2*q3;

initmachine;

// long address $4000..$BFFF - pallette registers

// make dark blue color 0 and light blue color 1

raml^[$4000]:=004080;
raml^[$4001]:=$00C0FF;

// long $18003 - border color

raml^[$18003]:=$0;

raml^[$18010]:=$01001100;    raml^[$18011]:=$80040004;
raml^[$18012]:=$01001100;    raml^[$18013]:=$00040004;
raml^[$18014]:=$01001100;    raml^[$18015]:=$00040004;
raml^[$18016]:=$01001100;    raml^[$18017]:=$00040004;
raml^[$18018]:=$01001100;    raml^[$18019]:=$00040004;
raml^[$1801a]:=$01001100;    raml^[$1801b]:=$00040004;
raml^[$1801c]:=$01001100;    raml^[$1801d]:=$00040004;
raml^[$1801e]:=$01001100;    raml^[$1801f]:=$00020002;
for i:=0 to 31 do
  for j:=0 to 31 do  begin
    if j<16 then k:=j*16 else k:=(31-j)*16 ;
    if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$14800+i+32*j]:=k else  raml^[$14800+i+32*j]:=$0;
    end;

for i:=0 to 31 do
  for j:=0 to 31 do  begin
    if j<16 then k:=j*16 else k:=(31-j)*16 ;
    k:=k shl 8;
    if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$14C00+i+32*j]:=k else  raml^[$14C00+i+32*j]:=$0;
    end;

for i:=0 to 31 do
  for j:=0 to 31 do  begin
    if j<16 then k:=j*16 else k:=(31-j)*16 ;
    k:=k shl 16;
    if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$15000+i+32*j]:=$80000000+k else  raml^[$15000+i+32*j]:=$0;
    end;

for i:=0 to 31 do
  for j:=0 to 31 do  begin
    if j<16 then k:=j*16 else k:=(31-j)*16 ;
    k:=k+(k shl 8);
    if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$15400+i+32*j]:=k else  raml^[$15400+i+32*j]:=$0;
    end;

for i:=0 to 31 do
  for j:=0 to 31 do  begin
    if j<16 then k:=j*16 else k:=(31-j)*16 ;
    k:=k+ (k shl 16);
    if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$15800+i+32*j]:=k else  raml^[$15800+i+32*j]:=$0;
    end;

for i:=0 to 31 do
  for j:=0 to 31 do  begin
    if j<16 then k:=j*16 else k:=(31-j)*16 ;
    k:=(k shl 8) + (k shl 16);
    if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$15c00+i+32*j]:=k else  raml^[$15C00+i+32*j]:=$0;
    end;

for i:=0 to 31 do
  for j:=0 to 31 do  begin
    if j<16 then k:=j*16 else k:=(31-j)*16 ;
    k:=k+(k shl 8)+(k shl 16);
    if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$16000+i+32*j]:=k else  raml^[$16000+i+32*j]:=$0;
    end;

//for i:=0 to 31 do
//  for j:=0 to 31 do  begin
//    if j<16 then k:=j else k:=(31-j);

//    if k<3 then k:=$FF
 //   else if k<5 then k:=$FF00
 //   else if k<7 then k:=$FF0000
 //   else if k<9 then k:=$FFFF


 //   else if k<11 then k:=$FF00FF
 //   else if k<13 then k:=$FFFF00
 //   else k:=$FFFFFF;
 //   k:=k+$FF000000;
 //   if (i<11) or (i>21) or (j<11) or (j>21) then raml^[$e400+i+32*j]:=k else  raml^[$e400+i+32*j]:=$0;
 //   end;




// --------- main program start

q1:=q2*q3;

graphics(0);
cls(146);
ttt:=gettime;
for i:=1 to 10000 do box(random(1792), random(1120), 200,{ random(500)+10, random(500)+10,} 200, random(256));
ttt:=gettime-ttt;
 cls(146);



//box(0,0,100,100,40);
//for i:=1 to 1000000000 do;
raml^[$18003]:=raml^[$4000+146];
box(50,50,600,400,0);
box(51,51,598,398,232);
outtextxy(82,56,'Okieneczko :)',36);
box(55,76,590,370,0);
box(56,77,588,20,15);
outtextxy(82,79,'Plik   Opcje   Widok   Ustawienia',146);
box(56,98,569,326,158);
box(56,425,569,20,221);
box(626,98,18,326,8);
box(627,190,16,100,5);
box(626,425,18,20,120);
outtextxy(66,116,'Test okienka w rozdzielczo'+#27+'ci 896x560',0);
outtextxy(82,427,'Pasek stanu',194);
//box(10,122,1177,20,15);

//box(101,143,1177,637,15);
//box(1179,122,20,657,15);

//for i:=1 to 1000000000 do;
//for i:=1 to 1000000000 do;
//for i:=1 to 1000000000 do;
//for i:=1 to 1000000000 do;
//for i:=1 to 1000000000 do;
//for i:=1 to 1000000000 do;

{


cls(147);
outtextxy(16,16,'Graphics mode 48 - 1792x1120x256',154);
outtextxy(16,32,'READY',1);
outtextxy(16,64,'1234567890 abcdefghijklmnopqrstuvwxyz',154);
outtextxy(16,80,'!@#$%^&*() ABCDEFGHIJKLMNOPQRSTUVWXYZ',154);
outtextxy(16,112,'READY',154);

for i:=56 to 63 do for j:=112 to 127 do putpixel(i,j,154);

for j:=144 to 399 do for i:=102 to 355 do
   putpixel(i,j,i-100);
for i:=1 to 1000 do box(random(1792),random(1120),random(500)+10,random(500)+10,random(256));




blit($F000000,100,100,$F800000,0,0,200,200,1792,200);
blit($F000000,100,100,$F820000,0,0,200,200,1792,200);
for i:=100 to 299 do for j:=100 to 299 do putpixel(i,j,40);
for i:=0 to 1000000000 do;

blit($F000000,100,100,$F810000,0,0,200,200,1792,200);
blit($F000000,100,100,$F830000,0,0,200,200,1792,200);
blit($F000000,0,0,$F400000,0,0,1120,1792,1792,1792);


for j:=50 to 200 do
  begin

  i:=2*j;
  k:=raml^[$18000];
  repeat until raml^[$18000]>k;
  raml^[$18001]:=$F400000;

  blit($F800000,0,0,$F000000,i,i,200,200,200,1792);
  blit($F000000,i+2,i+2,$F800000,0,0,200,200,1792,200);
  blit($F810000,0,0,$F000000,i+2,i+2,200,200,200,1792);

  i:=2*j+1;
  k:=raml^[$18000];
  repeat until raml^[$18000]>k;
  raml^[$18001]:=$F000000;

  blit($F820000,0,0,$F400000,i,i,200,200,200,1792);
  blit($F400000,i+2,i+2,$F820000,0,0,200,200,1792,200);
  blit($F830000,0,0,$F400000,i+2,i+2,200,200,200,1792);



  //k:=raml^[$18000];
//repeat until raml^[$18000]>k;

  end;
graphics(48);
//for i:=0 to 1000 do begin k:=raml^[$18000] raml^[$4000]:=random($FFFFFF); for j:=0 to 2000 do; end;
raml^[$4000]:=raml^[$4000+147];
raml^[$4001]:=raml^[$4000+156];
cls(0);
//for i:=0 to 127 do
//  for j:=0 to 255 do
//    putpixel(320+i,304+j,(i div 8)+16*(j div 16));
outtextxy(16,16,'Graphics mode 48 - 1792x1120x256',1);
outtextxy(16,32,'READY',1);
outtextxy(16,64,'1234567890 abcdefghijklmnopqrstuvwxyz',1);
outtextxy(16,80,'!@#$%^&*() ABCDEFGHIJKLMNOPQRSTUVWXYZ',1);
outtextxy(16,112,'READY',1);

for i:=56 to 63 do for j:=112 to 127 do putpixel(i,j,1);

for j:=144 to 399 do for i:=102 to 355 do
   putpixel(i,j,i-100);
        }
        sprx:=64;
        spr2x:=64;
        spr3x:=64;
        spr4x:=64;
        spr5x:=64;
        spr6x:=64;
        spr7x:=64;
        spr8x:=64;
        spry:=40;
        spr2y:=40;
        spr3y:=40;
        spr4y:=40;
        spr5y:=40;
        spr6y:=40;
        spr7y:=40;
        spr8y:=40;

        sprxd:=1;
        spr2xd:=2;
         spr3xd:=3;
         spr4xd:=4;
         spr5xd:=5;
         spr6xd:=6;
         spr7xd:=7;
         spr8xd:=8;

         spryd:=1;
        spr2yd:=2;
         spr3yd:=3;
         spr4yd:=4;
         spr5yd:=5;
         spr6yd:=6;
         spr7yd:=7;
         spr8yd:=8;
k:=raml^[$18000];
raml^[$18003]:=$002040;
//box2(200,200,400,400,40);
//for test:=0 to 1000 do
 repeat
begin
repeat until raml^[$18000]>k;

box(66,148,300,200,158);
outtextxy(66,148,'Screen time: '+inttostr(tim)+' us',40);
outtextxy(66,164,'Sprite time: '+inttostr(ts)+' us',104);
outtextxy(66,180,'All time: '+inttostr(t3)+' us',136);

c:=c+1;


avsct:=avsct+tim;
avspt:=avspt+ts;
avall:=avall+t3;
outtextxy(66,196,'Average screen time: '+inttostr(round(avsct/c))+' us',164);
outtextxy(66,212,'Average sprite time '+inttostr(round(avspt/c))+' us',196);
outtextxy(66,228,'Average all time '+inttostr(round(avall/c))+' us',228);
outtextxy(66,244,'10000 200x200 boxes time: '+inttostr(ttt)+' us', 244);
outtextxy(66,260,'Speed: '+inttostr(round(1000000*(400000000/ttt)))+' pps',56);

outtextxy(66,276,'Mouse buttons: '+inttostr(ramb^[$60030]),72);
outtextxy(66,292,'Mouse xrel: '+inttostr(xrel),88);
outtextxy(66,308,'p2: '+inttostr(cardinal(p2)),104);
k:=raml^[$18000];
sprx+=sprxd;
spry+=spryd;
if sprx>1728 then sprxd:=-1;
if sprx<64 then sprxd:=1;
if spry>1032 then spryd:=-1;
if spry<40 then spryd:=1;
raml^[$18010]:=(spry shl 16)+sprx;

spr2x+=spr2xd;
spr2y+=spr2yd;
if spr2x>1728 then spr2xd:=-2;
if spr2x<64 then spr2xd:=2;
if spr2y>1032 then spr2yd:=-2;
if spr2y<40 then spr2yd:=2;
raml^[$18012]:=(spr2y shl 16)+spr2x;

spr3x+=spr3xd;
spr3y+=spr3yd;
if spr3x>=1728 then spr3xd:=-3;
if spr3x<=64 then spr3xd:=3;
if spr3y>=1032 then spr3yd:=-3;
if spr3y<=40 then spr3yd:=3;
raml^[$18014]:=(spr3y shl 16)+spr3x;

spr4x+=spr4xd;
spr4y+=spr4yd;
if spr4x>1728 then spr4xd:=-4;
if spr4x<64 then spr4xd:=4;
if spr4y>=1032 then spr4yd:=-4;
if spr4y<=40 then spr4yd:=4;
raml^[$18016]:=(spr4y shl 16)+spr4x;

spr5x+=spr5xd;
spr5y+=spr5yd;
if spr5x>1728 then spr5xd:=-5;
if spr5x<64 then spr5xd:=5;
if spr5y>1032 then spr5yd:=-5;
if spr5y<40 then spr5yd:=5;
raml^[$18018]:=(spr5y shl 16)+spr5x;

spr6x+=spr6xd;
spr6y+=spr6yd;
if spr6x>1728 then spr6xd:=-6;
if spr6x<64 then spr6xd:=6;
if spr6y>1032 then spr6yd:=-6;
if spr6y<40 then spr6yd:=6;
raml^[$1801a]:=(spr6y shl 16)+spr6x;

spr7x+=spr7xd;
spr7y+=spr7yd;
if spr7x>1728 then spr7xd:=-7;
if spr7x<64 then spr7xd:=7;
if spr7y>1032 then spr7yd:=-7;
if spr7y<40 then spr7yd:=7;
raml^[$1801c]:=(spr7y shl 16)+spr7x;

//spr8x+=spr8xd;
//spr8y+=spr8yd;
//if spr8x>=1728 then spr8xd:=-8;
//if spr8x<=64 then spr8xd:=8;
//if spr8y>=1032 then spr8yd:=-8;
//if spr8y<=40 then spr8yd:=8;
//raml^[$1801e]:=(spr8y shl 16)+spr8x;


//  if spr8x>=1856 then spr8xd:=1728;
//  if spr8x<=64 then spr8xd:=8;
//  if spr8y>=1032 then spr8yd:=-8;
//  if spr8y<=40 then spr8yd:=8;
  raml^[$1801e]:=raml^[$1800B];
//  end;


end;
//end;
until ramb^[$6002b]<>0 ;


//----------------------- end of program

// terminate framebuffer refreshing thread

for i:=1 to 1000000 do;
stopmachine;

end;

end.

